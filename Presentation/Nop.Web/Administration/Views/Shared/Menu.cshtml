@using Nop.Web.Framework.Menu;
@{
    //load sitemap
    var siteMap = new Nop.Web.Framework.Menu.XmlSiteMap();
    siteMap.LoadFrom("~/Administration/sitemap.config");
}
@helper RenderMenuItem(Nop.Web.Framework.Menu.SiteMapNode item)
{
    string url = null;
    if (!string.IsNullOrEmpty(item.ControllerName) && !string.IsNullOrEmpty(item.ActionName))
    {
        url = Url.Action(item.ActionName, item.ControllerName, item.RouteValues, null, null);
    }
    else if (!string.IsNullOrEmpty(item.Url))
    {
        url = item.Url.StartsWith("~/", StringComparison.Ordinal) ? Url.Content(item.Url) : item.Url;
    }
    <li>
        @if (!String.IsNullOrEmpty(url))
        {
            <a href="@url">
                @if (!String.IsNullOrEmpty(item.ImageUrl))
                {
                    <text>
                        <img alt="" src="@Url.Content(item.ImageUrl)" />
                    </text>
                }
                @item.Title
            </a>
        }
        else
        {
            if (!String.IsNullOrEmpty(item.ImageUrl))
            {
                <text>
                    <img alt="" src="@Url.Content(item.ImageUrl)" />
                </text>
            }
            @item.Title
        }
        @{
            var childNodes = item.ChildNodes.Where(x => x.Visible).ToList();
        }
        @if (childNodes.Any())
        {
            <ul>
                @foreach (var childItem in childNodes)
                {
                    @RenderMenuItem(childItem)
                }
            </ul>
        }
    </li>
}

<ul id="admin-menu">
    @{
        //standard (default) items
        var rootNode = siteMap.RootNode;

        //plugins
        var adminMenuPlugins = EngineContext.Current.Resolve<Nop.Core.Plugins.IPluginFinder>()
            .GetPlugins<IAdminMenuPlugin>()
            .ToList();
        foreach (var adminMenuPlugin in adminMenuPlugins)
        {
            adminMenuPlugin.ManageSiteMap(rootNode);
        }
        //"Plugins" menu item should be visible when it has some child nodes
        var pluginNode = rootNode.ChildNodes.FirstOrDefault(x => x.SystemName == "Third party plugins");
        if (pluginNode != null && pluginNode.Visible)
        {
            var permissionService = EngineContext.Current.Resolve<Nop.Services.Security.IPermissionService>();
            var hasManagePluginsPermission = permissionService.Authorize(Nop.Services.Security.StandardPermissionProvider.ManagePlugins);
            pluginNode.Visible = hasManagePluginsPermission && pluginNode.ChildNodes.Any(x => x.Visible);
        }
    }
    @foreach (var item in rootNode.ChildNodes.Where(x => x.Visible))
    {
        @RenderMenuItem(item)
    }
</ul>
<script>
    $(document).ready(function() {
        $("#admin-menu").kendoMenu();
    });
</script>